LeetCode Questions:
code 1: Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.
var nums=[2,7,11,15]
var target = 9
let twoIndices=function(nums,target){
  for(let i=0;i<nums.length;i++){
    for(let j=1;j<nums.length;j++){
      if(nums[i]+nums[j]==target){                
        return [i,j];
      }
    }
  }
}
console.log(twoIndices(nums,target))  //output:[0, 1]
---------------------------------------------------------------------------
var nums=[2,7,11,15]
let sumIndices=function(nums,target=17){
  let map={}
  for(let i=0;i<nums.length;i++){
    let diff=target-nums[i]
    if(map.hasOwnProperty(diff)){
      return [map[diff],i]
    }
    map[nums[i]]=i
  }
  return result;
}
console.log(sumIndices(nums)) //output:[0, 3]
==========================================================================================================================================================================
code 2:Palindrome
var isPalindrome=function(x){
  if(x<0){
    return false;
  }
  return x.toString()==x.toString().split('').reverse().join('')
  return true;
}
console.log(isPalindrome('malayalam'))  //output:true
------------------------------------------------------------------------------
let isPalindrome=function(str){
  let x=str.length
  for(let i=0;i<x/2;i++){
    if(str[i]!=str[x-1-i]){
      return false
    }
    return true;
  }
}
console.log(isPalindrome('malayalam'))  //output:true
==========================================================================================================================================================================
code 3: Longest Common Prefix
var longestCommonPrefix=function(strs){
  if(strs.length==0){
    return " "
  }
  let r=''
  for(let i=0;i<strs.length;i++){
    for(let j=1;j<strs.length;j++){
      if(strs[0][i]!=strs[j][i]){
        return r
      }
    }
    r+=strs[0][i]
  }
  return r
}
console.log(longestCommonPrefix(['apple','apollo','app']))  //output:"ap"
-------------------------------------------------------------------------------
let longestCommonPrefix=function(strs){
  let arr=strs.sort()
  console.log(arr)
  var i=0
  while(arr[0].length>0 && arr[0].charAt(i)===arr[arr.length-1].charAt(i)){
    i++
  }
  console.log(arr[0].substring(0,i))
  return arr[0].substring(0,i)
}
longestCommonPrefix(['show','shoe','shoz']) //output:"sho"
-----------------------------------------------------------------------------
let longestCommonPrefix=function(strs){
  let ans=""
  var arr=strs.sort()
  for (i in arr[0]){
    if(!arr.every((el)=>el[i]===arr[0][i])){
      break
    }
    ans+=arr[0][i]
    
  }
  console.log(ans)
  return ans
}
longestCommonPrefix(['apollo','app']) //output:"ap"
==========================================================================================================================================================================
code 3: Valid Paranthesis 
var isValid=function(s){
  let map={"(":")","[":"]","{":"}"}
  let arr=[]
  for(ch in s){
    if(map[ch]){
      arr.push(map[ch])
    }
    else if(arr.length>0 &&arr[arr.length-1]===ch){
      arr.pop()
    }
    else 
      return false
  }
  return arr.length===0?true:false
}
console.log(isValid(([])))  //output:true
------------------------------------------------------------------------------
var isValid=(s)=>{
  let stack=[];
  for(ch of s){
    if(ch=="(" || ch=="[" || ch=="{"){
      stack.push()
    }
    else{
      const p=stack.pop()
      if((ch=="(" && p!=")") ||(ch=="[" && p!="]") || (ch=="{" && p!="}"))
        return false;
    }
  }
  return stack.length==0
}
console.log(isValid(([{}])))  //output:true
==========================================================================================================================================================================
code 4: Contain duplicate
var containsDuplicate=function(nums){
  return nums.length !=new Set(nums).size
}
console.log(containsDuplicate([1,1,2,4,5,6,2,3,4])) //output:true
==========================================================================================================================================================================
code 5: Fibonacci Number
let fib=N=>{
  return (N<2)?N:fib(N-2)+fib(N-1)
}
console.log(fib(7))   //output:13
----------------------------------------------------------------------------
const fib=n=>{
  const memo={}
  for(let i=0;i<=n;i++){
    if(i<2){
      memo[i]=i
    }else{
      memo[i]=memo[i-2]+memo[i-1]
    }
  }
  return memo[n]
}
console.log(fib(7))    //output:13
-----------------------------------------------------------------------------
const fib=n=>{
  let arr=[0,1]
  for(let i=2;i<=n;i++){
    arr.push(arr[i-2]+arr[i-1])
  }
  return arr[n]
}
console.log(fib(7))   //output:13
==========================================================================================================================================================================







